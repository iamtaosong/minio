# FROM golang:1.12-alpine

# ENV GOPATH /go
# ENV CGO_ENABLED 0
# ENV GO111MODULE on

# RUN  \
#      apk add --no-cache git && \
#      git clone https://github.com/minio/minio && cd minio/dockerscripts && \
#      go build -tags kqueue -ldflags "-s -w" -o /usr/bin/healthcheck healthcheck.go

FROM minio/minio:RELEASE.2019-08-14T20-37-41Z as build

FROM alpine:3.19

LABEL maintainer="MinIO Inc <dev@min.io>"

COPY --from=build /usr/bin/healthcheck /usr/bin/healthcheck
COPY --from=build /usr/bin/minio /usr/bin/minio
COPY dockerscripts/docker-entrypoint.sh /usr/bin/

ENV MINIO_UPDATE off
ENV MINIO_ACCESS_KEY_FILE=access_key \
    MINIO_SECRET_KEY_FILE=secret_key \
    MINIO_SSE_MASTER_KEY_FILE=sse_master_key

RUN \
     chmod +x /usr/bin/minio  && \
     chmod +x /usr/bin/docker-entrypoint.sh && \
     chmod +x /usr/bin/healthcheck

EXPOSE 9000

ENTRYPOINT ["/usr/bin/docker-entrypoint.sh"]

VOLUME ["/data"]

HEALTHCHECK --interval=1m CMD healthcheck

CMD ["minio"]

# docker build -f Dockerfile.release . -t kubef/minio:RELEASE.2019-08-14T20-37-41Z 